# see https://github.com/glauth/glauth/blob/master/v2/sample-simple.cfg

#################
# glauth.conf

#################
# General configuration.
debug = false
# syslog = true
#
# Enable hot-reload of configuration on changes
# - does NOT work [ldap], [ldaps], [backend] or [api] sections
# watchconfig = true

#################
# yubikeyclientid = "yubi-api-clientid"
# yubikeysecret = "yubi-api-secret"

#################
# Server configuration.
[ldap]
  enabled = true
  # run on a non privileged port
  listen = "127.0.0.1:{{ldap_port}}"

[ldaps]
# to enable ldaps genrerate a certificate, eg. with:
# openssl req -x509 -newkey rsa:4096 -keyout glauth.key -out glauth.crt -days 365 -nodes -subj '/CN=`hostname`'
  enabled = false
  #listen = "0.0.0.0:{{ldaps_port}}"
  #cert = "glauth.crt"
  #key = "glauth.key"

#################
# The backend section controls the data store.

[backend]
  datastore = "config"

  # see https://glauth.github.io/docs/postgresql.html
  #datastore = "plugin"
  #plugin = "postgres.so"
  #pluginhandler = "NewPostgresHandler"
  #database = "port=5432 host=127.0.0.1 user={{pac}}_{{user}} password={{password}} dbname={{pac}}_{{user}} sslmode=disable"

  baseDN = "{{basedn}}"
  nameformat = "cn"
  groupformat = "ou"

  ## Configure dn format to use structures like 
  ## "uid=serviceuser,cn=svcaccts,$BASEDN" instead of "cn=serviceuser,ou=svcaccts,$BASEDN"
  ## to help ease migrations from other LDAP systems
  # nameformat = "uid"
  # groupformat = "cn"

  ## Configure ssh-key attribute name, default is 'sshPublicKey'
  # sshkeyattr = "ipaSshPubKey"

[behaviors]
  # Ignore all capabilities restrictions, for instance allowing every user to perform a search
  IgnoreCapabilities = false
  # Enable a "fail2ban" type backoff mechanism temporarily banning repeated failed login attempts
  LimitFailedBinds = true
  # How many failed login attempts are allowed before a ban is imposed
  NumberOfFailedBinds = 3
  # How long (in seconds) is the window for failed login attempts
  PeriodOfFailedBinds = 10
  # How long (in seconds) is the ban duration
  BlockFailedBindsFor = 60
  # Clean learnt IP addresses every N seconds
  PruneSourceTableEvery = 600
  # Clean learnt IP addresses not seen in N seconds
  PruneSourcesOlderThan = 600
